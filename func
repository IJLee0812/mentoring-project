//수정해야 함

#include "head.h"
#define PathMax 255

void dirDFS(char* toFind, char* workDir) {
	
	DIR* dp = NULL;
	struct dirent *dir = NULL;
	if(chdir(workDir)==-1){
		perror("\n\nI. Working Directory Change Error\n");
		exit(1);
	}
	if ((dp = opendir(workDir))==NULL){
		perror("File Open Error\n");
		exit(1);
	}

	struct stat statbuf;
	while((dir=readdir(dp))!=NULL){
		printf("dir->d_name: %s\n", dir->d_name);   //
		lstat(dir->d_name, &statbuf);
		
		if (S_ISREG(statbuf.st_mode)){ //+ 트리가 끝에 도달했을 때
			if(chdir("..")==-1){
				perror("Working Directory Change Error\n");
				exit(1);
			}
		}
		else if (S_ISDIR(statbuf.st_mode)){
			if((strcmp(dir->d_name, ".")==0)||(strcmp(dir->d_name,"..")==0)){
				continue;
			}

			strcat(workDir,"/");
			strcat(workDir,dir->d_name);
			printf("\nworkDir: %s\n",workDir);  //

			if (strcmp(dir->d_name, toFind) == 0){
				printf("Dir Path: %s\n", workDir);
				closedir(dp);
				return;
			}
			dirDFS(toFind, workDir);
		}
	}

	if(chdir("..")==-1){
		perror("O. Working Directory Change Error\n");
		exit(1);
	}
}




char* getDirName(char* DirPath){

	//No slashes
	if (strstr(DirPath,"/")==NULL) {
		return DirPath;
	}

	//Slashes
	char* temp = (char*)malloc(sizeof(char)*PathMax);
	char* ptr = strtok(DirPath,"/");
	while (ptr!=NULL) {
		strcpy(temp, ptr);
		ptr = strtok(NULL,"/");
	}
	return temp;

}




void printDir(char* argv, char* toFind){
	
	char workDir[PathMax];
	struct passwd *pwd;
	errno = 0;
	if((pwd = getpwuid(getuid())) == NULL) { 
		if(errno == 0 || errno == ENOENT || errno == ESRCH || errno == EBADF || errno == EPERM) { 
			printf("미등록 된 사용자입니다.\n"); 
		} 
		else { 
			printf("error: %s\n", strerror(errno)); 
		}
		return;	
	}
	printf("pwd->pw_dir: %s\n",pwd->pw_dir);

	if (strcmp(".", argv) == 0){ //탐색안하는경우
		getcwd(workDir,PathMax);
		printf("%s Path: %s\n", toFind, workDir);
	}
	else{ //탐색하는경우 (루트부터)
		strcpy(workDir,pwd->pw_dir);
	}

	dirDFS(toFind,workDir);

}




int main(int argc, char* argv[]){

	if(argc!=3){
		fprintf(stderr,"Usage: Program Dir File\n");
		exit(1);
	}

	char* toFind = getDirName(argv[2]);
	printDir(argv[2], toFind);
	return 0;

}
